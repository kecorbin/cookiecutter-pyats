#*******************************************************************************
#*                           Testbed File Template
#* ----------------------------------------------------------------------------
#* ABOUT THIS TEMPLATE - Please read
#*
#* - Any comments with "#*" in front of them (like this entire comment box) are
#*   for template clarifications only and should be removed from the final
#*   product.
#*
#* - Anything enclosed in <> must be replaced by the appropriate text for your
#*   application
#*
#* Author:
#*    Siming Yuan, Automation Strategy - Core Software Group (CSG)
#*
#* Support:
#*    pyats-support@cisco.com
#*
#* Description:
#*   This template file describes how to write a standard pyATS style testbed
#*   yaml file that describes a testbed.
#*
#* Read More:
#*   For the complete and up-to-date information & user guides on testbed files
#*   and the topology module, refer to:
#*   URL= http://wwwin-pyats.cisco.com/documentation/html/topology/index.html
#*
#*******************************************************************************

#*******************************************************************************
#* YAML
#*
#*  YAML Ain't Markup Language (YAML) is a data serialization language designed
#*  to be human & machine friendly.
#*
#*  YAML as a testbed file format standardizes the look & feel of testbed files
#*  in pyATS, and as well introduces a strict schema for how they are 
#*  structurally and syntaxially defined.
#*
#*  YAML files are not program files: they are descriptive in nature and cannot 
#*  be run. However, if you ever find yourself needing dynamic fields, use a 
#*  generator: YAML files can be easily generated by simple codes.
#*
#*  Test Your YAML Format
#*  ---------------------
#*    To test that your testbed file is in a proper YAML format, try the
#*    following in a Python shell:
#*          >>> import yaml
#*          >>> with open('myYaml.yaml','r') as yaml_file:
#*                  data = yaml.safe_load(yaml_file)
#*
#*    if there were no exceptions, congrats, you've just mastered YAML 
#*    formatting.
#*
#*  YAML spec:
#*      URL= http://www.yaml.org/spec/1.2/spec.html
#*
#*******************************************************************************

#*******************************************************************************
#* TESTBED FILE
#*
#*  Testbed files should be used only to describe the "physical" aspect of the
#*  hardware, including some "how-tos", such as connection details. It shall not
#*  not be used for other purposes such as testsript information. Ideally, test
#*  scripts shall only have a topology requirement, not a testbed requirement.
#*
#*  Testbed file should be named <testbedname>.yaml
#*
#*  What Goes In Testbed File
#*  -------------------------
#*      
#*      Testbed Generic Info - testbed name
#*                           - common testbed information, such as passwords
#*                           - testbed server information
#*
#*      Device Info         - name, type
#*                          - connection information
#*                          - login/password information
#*                          - static clean/reloading information
#*
#*      Topology            - device interfacess
#*                          - links & topology information
#*
#*  What Doesn't Belong
#*  -------------------
#*
#*      - interface IP information (they should be dynamic)
#*      - dynamic clean information, such as image path, version, etc.
#*      - test script information (they should be fed as arguments to script)
#*
#* Testbed Schema
#* --------------
#* only a pre-defined topology structure, keys & values can be set within the 
#* testbed file. This information is closely controlled by the testbed schema.
#* For full description and details of testbed file schema, visit:
#* URL= http://wwwin-pyats.cisco.com/documentation/html/topology/schema.html
#*
#*******************************************************************************


################################################################################
# < Testbed Name >
#
# Location:
#   < location of testbed >
#
# Description:
#   < description of testbed >
#
# Owner/Team:
#   < name/team > (< email/mailer >)
#
# Hardware List:
#   < list of hardware >
#
# Topology:
#   < draw topology >
#
# Notes:
#   < etc >
#
################################################################################

# testbed block
# -------------
#   information concerning/common to the whole testbed.
testbed:

    name :  # testbed name string.
            # (default: testbed filename with prefix CONFIG. and/or postfix
            #           .yaml trimmed)
            # (optional)

    alias:  # testbed name alias.
            # (default: same as testbed name)
            # (optional)

    class:  # testbed object class.
            # use this field to provide an alternative subclass of
            # Testbed to instantiate this testbed to. can be used to
            # extend the base Testbed class functionalities
            #   Eg: module.submodule.MyTestbedClass
            # (default: ats.topology.Testbed)
            # (optional)

    tacacs:
        # TACACS information common to the testbed.
        # (optional)
        login_prompt:   # testbed login prompt
                        # (default: 'login:')
                        # (optional)
        password_prompt:    # testbed password prompt
                            # (default: 'Password:')
                            # (optional)
        username:   # testbed login username
                    # (default: 'admin')
                    # (optional)

    passwords:
        # password information common to the testbed
        # (optional)
        tacacs:     # tacacs password
                    # (default: 'lab')
                    # (optional)
        enable:     # enable mode password
                    # (default: 'lab')
                    # (optional)
        line:       # console line password
                    # (default: 'lab')
                    # (optional)
        linux:      # linux server password
                    # (default: 'lab')
                    # (optional)

    servers:
        # servers serving/helping and providing services to this entire
        # testbed. any server described here should ideally be servicing
        # the entire testbed and accessible by all devices.
        # (optional)

        "<name>": # server name goes here. each server requires its own
                  # description section
                  # (optional)
            server: # server name
                    # (optional)
            address:    # server ip address
                        # (optional)
            path:       # path to root folder (eg, tftproot)
                        # (optional)
            username:   # server login username
                        # (optional)
            password:   # server login password
                        # (optional)
            custom:
                # any custom key/value pairs concerning this server
                "<key>": "<value>"

    network:
        # any network key/value pair information concerning this testbed
        # (optional)
        "<key>": " <value>"

    iou:
        # common iou/iol information regarding this testbed
        # (optional)

        iou_flags:  # any iou startup flags in string
                    # (optional)
        iou:    # iou information in string
                # (optional)

    custom:
        # any custom key/value pairs common to this entire testbed
        # (optional)
        "<key>": "<value>
        "


# devices block
# -------------
#   all testbed devices are described here
devices:

    "<name>": # device name (hostname) goes here. each device requires its own
              # description section within devices block

        alias:  # device name alias.
                # (default: same as device name)
                # (optional)

        class:  # device object class.
                # use this field to provide an alternative subclass of
                # Device to instantiate this device block to. can be used to
                # extend the base Device class functionalities
                #   Eg: module.submodule.MyDeviceClass
                # (default: ats.topology.Device)
                # (optional)

        region: # device region string
                # (optional)

        role:   # device role string
                # (optional)

        os:     # device os string
                # (optional)

        power:  # device power string
                # (optional)

        hardware:   # device hardware block
                    # may contain anything describing the hardware info
                    # (optional)

        tacacs:
            # TACACS information specific to this device
            # this is the same as the testbed tacacs above.
            # (optional)
            login_prompt:
            password_prompt:
            username:

        passwords:
            # password information specific to this device
            # this is the same as the testbed passwords above.
            # (optional)
            tacacs:
            enable:
            line:
            linux:

        connections:
            # block describing the 'ways' or 'methods' of connecting
            # to this testbed device. eg, telnet, ssh, netconf, etc
            # (required)

            "<a/b/alt>":
                # traditional Csccon style connection naming convention
                # describing console connection A/B and the alt (mgmt)
                # connection
                # (optional)
                protocol:   # connection protocol, eg, telnet/ssh
                            # (required)
                ip:     # device hostname or connection ip address
                        # (required)
                port:   # port to connect to
                        # (optional)
                class:  # connection class to use. use this field to provide
                        # an alternative connection class to use to connect
                        # to this connection
                        # (default: ats.connection.bases.Csccon)
                        # (optional)

            "<name>":
                # new - any other connection methods/ways to talk to this
                # testbed device. must specify connection class, as the
                # infrastructure cannot guess how to connect to this new
                # description
                # (optional)
                protocol:   # connection protocol
                            # (optional)
                ip:     # device hostname or connection ip address
                        # (optional)
                class:  # connection class to use. use this field to provide
                        # an alternative connection class to use to connect
                        # to this connection
                        # (required)

        custom:
            # any custom key/value pairs specific to this device
            # (optional)
            "<key>": "<value>"


# topology block
# --------------
#   describes the physical interfaces and links
topology:

    links:
        # section describing the links used in this testbed.
        # this section is optional. It is only needed if there's a need
        # to specify additional/custom values for the named link.
        # (optional)

        "<name>": # link name. each link that has extended descriptions
                  # needs to have its own section under links
                  # (optional)

            alias:  # link alias.
                    # (default: same as link name)
                    # (optional)

            class:  # link object class.
                    # use this field to provide an alternative subclass of
                    # Link to instantiate this link block to. can be used to
                    # extend the base Link class functionalities
                    #   Eg: module.submodule.myLinkClass
                    # (default: ats.topology.Link)
                    # (optional)

            "<key>": "<value>"  # any other key/values custom to this link
                                # goes here as standard yaml syntax
                                # (optional)

    "<device>":   # each device's interface/link gets its own block named
                # using the device name/hostname. the device mentioned
                # here must be also described under the device block.
                # (optional)

        interfaces: # begin the device interface description section
                    # (required)

            "<intfname>": # each device interface requires its own section
                          # under the interfaces block
                          # interface names must be unique per device
                          # (optional)

                type:   # interface type string
                        # (mandatory)
                alias:  # interface alias.
                        # (default: same as interface name)
                        # (optional)
                link:   # string name of the link this interface is
                        # connected to. Unique link names here will yield
                        # unique links. If a linkname is also described
                        # in the link section above, the extended info
                        # for that link will be used.
                        # (optional)
                ipv4:   # ipv4 interface address and mask
                        # this is loaded and converted to
                        # ipaddress.IPv4Interface object
                        # (optional)
                ipv6:   # ipv6 interface address and mask
                        # this is loaded and converted to
                        # ipaddress.IPv6Interface object
                        # (optional)
                class:  # interface object class. use this field to provide
                        # an alternative subclass of Interface class to
                        # instantiate this interface section with. can be
                        # used to extend the base Interface class functions
                        #   Eg: module.submodule.myInterfaceClass
                        # (default: ats.topology.Interface)
                        # (optional)
                "<key>": "<value>"  # any other key/values custom to this
                                    # interface goes here
                                    # (optional)